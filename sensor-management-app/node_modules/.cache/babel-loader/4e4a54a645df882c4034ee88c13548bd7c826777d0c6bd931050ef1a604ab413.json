{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineSensors = () => {\n  _s();\n  const [offlineSensors, setOfflineSensors] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch sensor data from Flask backend\n    axios.get('http://localhost:5000/').then(response => {\n      const allSensors = response.data;\n      const offlineSensors = Object.values(allSensors).map(sensor => {\n        let filteredHistoricalData = [];\n        if (sensor.type === 'Energy') {\n          filteredHistoricalData = sensor.historical_data ? sensor.historical_data.filter(row => row.value < 0 || row.value > 50) : [];\n        } else if (sensor.type === 'Water') {\n          filteredHistoricalData = sensor.historical_data ? sensor.historical_data.filter(row => row.value < 0 || row.value > 4) : [];\n        }\n        return {\n          ...sensor,\n          historical_data: filteredHistoricalData\n        };\n      });\n      setOfflineSensors(offlineSensors);\n      setLoading(false);\n    }).catch(error => console.error('Error fetching sensors:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this), Object.values(offlineSensors).map(sensor => sensor.historical_data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Serial Number: \", sensor.serial_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Status: \", sensor.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this), sensor.historical_data.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Timestamp: \", row.timestamp, \", Value: \", row.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this)]\n    }, sensor.serial_number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(OfflineSensors, \"UTIO/7ES6fg/4L7F8zEm1Oslml8=\");\n_c = OfflineSensors;\nexport default OfflineSensors;\nvar _c;\n$RefreshReg$(_c, \"OfflineSensors\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OfflineSensors","_s","offlineSensors","setOfflineSensors","loading","setLoading","get","then","response","allSensors","data","Object","values","map","sensor","filteredHistoricalData","type","historical_data","filter","row","value","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","serial_number","status","index","timestamp","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst OfflineSensors = () => {\n    const [offlineSensors, setOfflineSensors] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Fetch sensor data from Flask backend\n        axios.get('http://localhost:5000/')\n          .then(response => {\n            const allSensors = response.data;\n            const offlineSensors = Object.values(allSensors).map(sensor => {\n              let filteredHistoricalData = [];\n              if (sensor.type === 'Energy') {\n                filteredHistoricalData = sensor.historical_data\n                  ? sensor.historical_data.filter(row => row.value < 0 || row.value > 50)\n                  : [];\n              }\n              else if (sensor.type === 'Water') {\n                filteredHistoricalData = sensor.historical_data\n                  ? sensor.historical_data.filter(row => row.value < 0 || row.value > 4)\n                  : [];\n              }\n            \n              return {\n                ...sensor,\n                historical_data: filteredHistoricalData,\n              };\n            });\n            setOfflineSensors(offlineSensors);\n            setLoading(false);\n          })\n          .catch(error => console.error('Error fetching sensors:', error));\n    }, []);\n\n    return (\n        <div>\n          <h2>Offline Sensors</h2>\n          {loading && <p>Loading...</p>}\n          {Object.values(offlineSensors).map(sensor => (\n              sensor.historical_data.length > 0 && (\n                  <div key={sensor.serial_number}>\n                      <div>Serial Number: {sensor.serial_number}</div>\n                      <div>Status: {sensor.status}</div>\n                      {sensor.historical_data.map((row, index) => (\n                          <div key={index}>\n                            Timestamp: {row.timestamp}, Value: {row.value}\n                          </div>\n                      ))}\n                      <br />\n                  </div>\n              )\n          ))}\n        </div>\n    );\n};\n\nexport default OfflineSensors;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CAACS,GAAG,CAAC,wBAAwB,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI;MAChC,MAAMR,cAAc,GAAGS,MAAM,CAACC,MAAM,CAACH,UAAU,CAAC,CAACI,GAAG,CAACC,MAAM,IAAI;QAC7D,IAAIC,sBAAsB,GAAG,EAAE;QAC/B,IAAID,MAAM,CAACE,IAAI,KAAK,QAAQ,EAAE;UAC5BD,sBAAsB,GAAGD,MAAM,CAACG,eAAe,GAC3CH,MAAM,CAACG,eAAe,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,GAAG,EAAE,CAAC,GACrE,EAAE;QACR,CAAC,MACI,IAAIN,MAAM,CAACE,IAAI,KAAK,OAAO,EAAE;UAChCD,sBAAsB,GAAGD,MAAM,CAACG,eAAe,GAC3CH,MAAM,CAACG,eAAe,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,GAAG,CAAC,CAAC,GACpE,EAAE;QACR;QAEA,OAAO;UACL,GAAGN,MAAM;UACTG,eAAe,EAAEF;QACnB,CAAC;MACH,CAAC,CAAC;MACFZ,iBAAiB,CAACD,cAAc,CAAC;MACjCG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIvB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBxB,OAAO,iBAAIL,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BjB,MAAM,CAACC,MAAM,CAACV,cAAc,CAAC,CAACW,GAAG,CAACC,MAAM,IACrCA,MAAM,CAACG,eAAe,CAACY,MAAM,GAAG,CAAC,iBAC7B9B,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,GAAK,iBAAe,EAACV,MAAM,CAACgB,aAAa;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChD7B,OAAA;QAAAyB,QAAA,GAAK,UAAQ,EAACV,MAAM,CAACiB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACjCd,MAAM,CAACG,eAAe,CAACJ,GAAG,CAAC,CAACM,GAAG,EAAEa,KAAK,kBACnCjC,OAAA;QAAAyB,QAAA,GAAiB,aACJ,EAACL,GAAG,CAACc,SAAS,EAAC,WAAS,EAACd,GAAG,CAACC,KAAK;MAAA,GADrCY,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR,CAAC,eACF7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GARAd,MAAM,CAACgB,aAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASzB,CAEZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAC3B,EAAA,CArDID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAuDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}