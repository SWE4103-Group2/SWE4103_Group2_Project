{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineSensors = () => {\n  _s();\n  const [offlineSensors, setOfflineSensors] = useState({});\n  useEffect(() => {\n    // Fetch sensor data from Flask backend\n    axios.get('http://localhost:5000/').then(response => {\n      const allSensors = response.data;\n      const offlineSensors = Object.values(allSensors).map(sensor => {\n        if (sensor.type == 'Energy') {\n          const filteredHistoricalData = sensor.historical_data ? sensor.historical_data.filter(row => row.value < 0 || row.value > 50) : [];\n        } else if (sensor.type == 'Water') {\n          const filteredHistoricalData = sensor.historical_data ? sensor.historical_data.filter(row => row.value < 0 || row.value > 4) : [];\n        }\n        return {\n          ...sensor,\n          historical_data: filteredHistoricalData\n        };\n      });\n      setOfflineSensors(offlineSensors);\n    }).catch(error => console.error('Error fetching sensors:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(offlineSensors).map(sensor => sensor.historical_data.length > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Serial Number: \", sensor.serial_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", sensor.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sensor.historical_data.map(row => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Timestamp: \", row.timestamp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Value: \", row.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, row.timestamp, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, sensor.serial_number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(OfflineSensors, \"CmoyG72oyjrqe3eBMF2tfX0Mung=\");\n_c = OfflineSensors;\nexport default OfflineSensors;\nvar _c;\n$RefreshReg$(_c, \"OfflineSensors\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OfflineSensors","_s","offlineSensors","setOfflineSensors","get","then","response","allSensors","data","Object","values","map","sensor","type","filteredHistoricalData","historical_data","filter","row","value","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","serial_number","status","timestamp","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst OfflineSensors = () => {\n    const [offlineSensors, setOfflineSensors] = useState({});\n\n    useEffect(() => {\n        // Fetch sensor data from Flask backend\n        axios.get('http://localhost:5000/')\n          .then(response => {\n            const allSensors = response.data;\n            const offlineSensors = Object.values(allSensors).map(sensor => {\n              if (sensor.type == 'Energy') {\n                const filteredHistoricalData = sensor.historical_data\n                  ? sensor.historical_data.filter(row => row.value < 0 || row.value > 50)\n                  : [];\n              }\n              else if (sensor.type == 'Water') {\n                const filteredHistoricalData = sensor.historical_data\n                  ? sensor.historical_data.filter(row => row.value < 0 || row.value > 4)\n                  : [];\n              }\n            \n              return {\n                ...sensor,\n                historical_data: filteredHistoricalData,\n              };\n            });\n            setOfflineSensors(offlineSensors);\n          })\n          .catch(error => console.error('Error fetching sensors:', error));\n    }, []);\n\n    return (\n        <div>\n        <h2>Offline Sensors</h2>\n        <ul>\n            {Object.values(offlineSensors).map(sensor => (\n                sensor.historical_data.length > 0 && (\n                    <li key={sensor.serial_number}>\n                        <p>Serial Number: {sensor.serial_number}</p>\n                        <p>Status: {sensor.status}</p>\n                        <ul>\n                        {sensor.historical_data.map(row => (\n                            <li key={row.timestamp}>\n                                <p>Timestamp: {row.timestamp}</p>\n                                <p>Value: {row.value}</p>\n                            </li>\n                        ))}\n                        </ul>\n                    </li>\n                )\n            ))}\n        </ul>\n        </div>\n    );\n};\n\nexport default OfflineSensors;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CAACO,GAAG,CAAC,wBAAwB,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI;MAChC,MAAMN,cAAc,GAAGO,MAAM,CAACC,MAAM,CAACH,UAAU,CAAC,CAACI,GAAG,CAACC,MAAM,IAAI;QAC7D,IAAIA,MAAM,CAACC,IAAI,IAAI,QAAQ,EAAE;UAC3B,MAAMC,sBAAsB,GAAGF,MAAM,CAACG,eAAe,GACjDH,MAAM,CAACG,eAAe,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,GAAG,EAAE,CAAC,GACrE,EAAE;QACR,CAAC,MACI,IAAIN,MAAM,CAACC,IAAI,IAAI,OAAO,EAAE;UAC/B,MAAMC,sBAAsB,GAAGF,MAAM,CAACG,eAAe,GACjDH,MAAM,CAACG,eAAe,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,GAAG,CAAC,CAAC,GACpE,EAAE;QACR;QAEA,OAAO;UACL,GAAGN,MAAM;UACTG,eAAe,EAAED;QACnB,CAAC;MACH,CAAC,CAAC;MACFX,iBAAiB,CAACD,cAAc,CAAC;IACnC,CAAC,CAAC,CACDiB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrB,OAAA;IAAAuB,QAAA,gBACAvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA;MAAAuB,QAAA,EACKb,MAAM,CAACC,MAAM,CAACR,cAAc,CAAC,CAACS,GAAG,CAACC,MAAM,IACrCA,MAAM,CAACG,eAAe,CAACY,MAAM,GAAG,CAAC,iBAC7B5B,OAAA;QAAAuB,QAAA,gBACIvB,OAAA;UAAAuB,QAAA,GAAG,iBAAe,EAACV,MAAM,CAACgB,aAAa;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5C3B,OAAA;UAAAuB,QAAA,GAAG,UAAQ,EAACV,MAAM,CAACiB,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9B3B,OAAA;UAAAuB,QAAA,EACCV,MAAM,CAACG,eAAe,CAACJ,GAAG,CAACM,GAAG,iBAC3BlB,OAAA;YAAAuB,QAAA,gBACIvB,OAAA;cAAAuB,QAAA,GAAG,aAAW,EAACL,GAAG,CAACa,SAAS;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjC3B,OAAA;cAAAuB,QAAA,GAAG,SAAO,EAACL,GAAG,CAACC,KAAK;YAAA;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFpBT,GAAG,CAACa,SAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGlB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAVAd,MAAM,CAACgB,aAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWzB,CAEX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CArDID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAuDpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}