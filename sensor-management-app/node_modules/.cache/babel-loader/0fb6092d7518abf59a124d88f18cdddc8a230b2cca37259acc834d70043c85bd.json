{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineSensors = ({\n  offlineSensors\n}) => {\n  // Check if sensors is defined before using Object.keys\n  /*const offlineSensorIds = offlineSensors\n      ? Object.keys(offlineSensors).filter(sensorId => (\n          offlineSensors[sensorId]?.historical_data?.value < 0 || offlineSensors[sensorId]?.historical_data?.value > 4\n          ))\n      : [];*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(offlineSensors).map(sensorId => {\n        const sensor = offlineSensors[sensorId];\n        return sensor && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: sensor\n          }, sensor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, sensorId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = OfflineSensors;\nexport default OfflineSensors;\nvar _c;\n$RefreshReg$(_c, \"OfflineSensors\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","OfflineSensors","offlineSensors","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","sensorId","sensor","Fragment","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js"],"sourcesContent":["import React from 'react';\n\nconst OfflineSensors = ({ offlineSensors }) => {\n    // Check if sensors is defined before using Object.keys\n    /*const offlineSensorIds = offlineSensors\n        ? Object.keys(offlineSensors).filter(sensorId => (\n            offlineSensors[sensorId]?.historical_data?.value < 0 || offlineSensors[sensorId]?.historical_data?.value > 4\n            ))\n        : [];*/\n    \n    return (\n        <div>\n        <h2>Offline Sensors</h2>\n        <ul>\n            {Object.keys(offlineSensors).map(sensorId => {\n                const sensor = offlineSensors[sensorId]\n                return (sensor &&\n                    <React.Fragment key={sensorId}>\n                    <li key={sensor}>\n                        {sensor}\n                    </li>\n                </React.Fragment>\n                );\n            })}\n        </ul>\n        </div>\n    );\n};\n\nexport default OfflineSensors;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC3C;EACA;AACJ;AACA;AACA;AACA;;EAEI,oBACIF,OAAA;IAAAG,QAAA,gBACAH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBP,OAAA;MAAAG,QAAA,EACKK,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC,CAACQ,GAAG,CAACC,QAAQ,IAAI;QACzC,MAAMC,MAAM,GAAGV,cAAc,CAACS,QAAQ,CAAC;QACvC,OAAQC,MAAM,iBACVZ,OAAA,CAACF,KAAK,CAACe,QAAQ;UAAAV,QAAA,eACfH,OAAA;YAAAG,QAAA,EACKS;UAAM,GADFA,MAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEX;QAAC,GAHgBI,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIjB,CAAC;MAErB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACO,EAAA,GAzBIb,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}