{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport SensorList from './SensorList';\nimport OfflineSensors from './OfflineSensors';\nimport AddSensor from './AddSensor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sensors, setSensors] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/');\n        setSensors(response.data);\n      } catch (error) {\n        console.error('Error fetching sensors:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSensorAdded = newSensor => {\n    setSensors(prevSensors => [...prevSensors, newSensor]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Sensors\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(AddSensor, {\n              onSensorAdded: handleSensorAdded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.values(sensors).map(sensor => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: sensor.serial_number\n              }, sensor.serial_number, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Sensors/offline\",\n          element: /*#__PURE__*/_jsxDEV(OfflineSensors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Sensors/historical\",\n          element: /*#__PURE__*/_jsxDEV(SensorList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jX46rH897G+urM0ad4iJqHW7k0U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","SensorList","OfflineSensors","AddSensor","jsxDEV","_jsxDEV","App","_s","sensors","setSensors","fetchData","response","get","data","error","console","handleSensorAdded","newSensor","prevSensors","className","children","path","element","onSensorAdded","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","sensor","serial_number","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport SensorList from './SensorList';\nimport OfflineSensors from './OfflineSensors';\nimport AddSensor from './AddSensor';\n\nfunction App() {\n  const [sensors, setSensors] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/');\n        setSensors(response.data);\n      } catch (error) {\n        console.error('Error fetching sensors:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSensorAdded = (newSensor) => {\n    setSensors((prevSensors) => [...prevSensors, newSensor]);\n  };\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route\n            path=\"/Sensors\"\n            element={(\n              <div>\n                <AddSensor onSensorAdded={handleSensorAdded} />\n                <ul>\n                  {Object.values(sensors).map((sensor) => (\n                    <li key={sensor.serial_number}>\n                      {sensor.serial_number}\n                      {/*<DeleteSensor\n                        sensorId={sensor.id}\n                        onSensorDeleted={handleSensorDeleted}\n                      />*/}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          />\n          <Route path=\"/Sensors/offline\" element={<OfflineSensors />} />\n          <Route path=\"/Sensors/historical\" element={<SensorList />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}