{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport Navigation from './Navigation';\nimport MainContent from './MainContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showSensors, setShowSensors] = useState(false);\n  const [showRT, setShowRT] = useState(false);\n  const [showHistorical, setShowHistorical] = useState(false);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showReports, setShowReports] = useState(false);\n  const handleButtonClick = section => {\n    // Reset all states to false\n    setShowSensors(false);\n    setShowRT(false);\n    setShowHistorical(false);\n    setShowAnalytics(false);\n    setShowReports(false);\n\n    // Set the selected section to true\n    switch (section) {\n      case 'sensors':\n        setShowSensors(true);\n        break;\n      case 'rt':\n        setShowRT(true);\n        break;\n      case 'historical':\n        setShowHistorical(true);\n        break;\n      case 'analytics':\n        setShowAnalytics(true);\n        break;\n      case 'reports':\n        setShowReports(true);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      onButtonClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      showSensors: showSensors,\n      showRT: showRT,\n      showHistorical: showHistorical,\n      showAnalytics: showAnalytics,\n      showReports: showReports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FzedBc/Y2khpL2mBwMlRmtQoLq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","MainContent","jsxDEV","_jsxDEV","App","_s","showSensors","setShowSensors","showRT","setShowRT","showHistorical","setShowHistorical","showAnalytics","setShowAnalytics","showReports","setShowReports","handleButtonClick","section","className","children","onButtonClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Navigation from './Navigation';\nimport MainContent from './MainContent';\n\nfunction App() {\n  const [showSensors, setShowSensors] = useState(false);\n  const [showRT, setShowRT] = useState(false);\n  const [showHistorical, setShowHistorical] = useState(false);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const [showReports, setShowReports] = useState(false);\n\n  const handleButtonClick = (section) => {\n    // Reset all states to false\n    setShowSensors(false);\n    setShowRT(false);\n    setShowHistorical(false);\n    setShowAnalytics(false);\n    setShowReports(false);\n\n    // Set the selected section to true\n    switch (section) {\n      case 'sensors':\n        setShowSensors(true);\n        break;\n      case 'rt':\n        setShowRT(true);\n        break;\n      case 'historical':\n        setShowHistorical(true);\n        break;\n      case 'analytics':\n        setShowAnalytics(true);\n        break;\n      case 'reports':\n        setShowReports(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation\n        onButtonClick={handleButtonClick}\n      />\n      <MainContent\n        showSensors={showSensors}\n        showRT={showRT}\n        showHistorical={showHistorical}\n        showAnalytics={showAnalytics}\n        showReports={showReports}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMiB,iBAAiB,GAAIC,OAAO,IAAK;IACrC;IACAV,cAAc,CAAC,KAAK,CAAC;IACrBE,SAAS,CAAC,KAAK,CAAC;IAChBE,iBAAiB,CAAC,KAAK,CAAC;IACxBE,gBAAgB,CAAC,KAAK,CAAC;IACvBE,cAAc,CAAC,KAAK,CAAC;;IAErB;IACA,QAAQE,OAAO;MACb,KAAK,SAAS;QACZV,cAAc,CAAC,IAAI,CAAC;QACpB;MACF,KAAK,IAAI;QACPE,SAAS,CAAC,IAAI,CAAC;QACf;MACF,KAAK,YAAY;QACfE,iBAAiB,CAAC,IAAI,CAAC;QACvB;MACF,KAAK,WAAW;QACdE,gBAAgB,CAAC,IAAI,CAAC;QACtB;MACF,KAAK,SAAS;QACZE,cAAc,CAAC,IAAI,CAAC;QACpB;MACF;QACE;IACJ;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA,CAACH,UAAU;MACToB,aAAa,EAAEJ;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFrB,OAAA,CAACF,WAAW;MACVK,WAAW,EAAEA,WAAY;MACzBE,MAAM,EAAEA,MAAO;MACfE,cAAc,EAAEA,cAAe;MAC/BE,aAAa,EAAEA,aAAc;MAC7BE,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAnDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}