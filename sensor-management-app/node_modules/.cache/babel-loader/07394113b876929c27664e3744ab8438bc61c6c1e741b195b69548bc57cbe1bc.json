{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const [totalEnergyConsumption, setTotalEnergyConsumption] = useState(0);\n  const [totalWaterConsumption, setTotalWaterConsumption] = useState(0);\n  const [offlineSensorCount, setOfflineSensorCount] = useState(0);\n  const [outOfBoundsSensorCount, setOutOfBoundsSensorCount] = useState(0);\n  useEffect(() => {\n    // Fetch sensor data from the Flask backend\n    axios.get('http://localhost:5000/').then(response => {\n      const allSensors = response.data;\n\n      // Calculate total energy consumption and water consumption\n      let energyConsumption = 0;\n      let waterConsumption = 0;\n\n      // Count offline and out-of-bounds sensors\n      let offlineCount = 0;\n      let outOfBoundsCount = 0;\n      Object.values(allSensors).forEach(sensor => {\n        if (sensor.type === 'Energy') {\n          energyConsumption += calculateEnergyConsumption(sensor);\n        } else if (sensor.type === 'Water') {\n          waterConsumption += calculateWaterConsumption(sensor);\n        }\n\n        // Check if the sensor is offline\n        if (sensor.status === 'OFF') {\n          offlineCount++;\n        }\n\n        // Check if the sensor has out-of-bounds values\n        const outOfBoundsValues = sensor.historical_data ? sensor.historical_data.some(row => row.value < 0 || row.value > 4) : false;\n        if (outOfBoundsValues) {\n          outOfBoundsCount++;\n        }\n      });\n      setTotalEnergyConsumption(Math.round(energyConsumption));\n      setTotalWaterConsumption(Math.round(waterConsumption));\n      setOfflineSensorCount(offlineCount);\n      setOutOfBoundsSensorCount(outOfBoundsCount);\n    }).catch(error => console.error('Error fetching sensors:', error));\n  }, []);\n  const calculateEnergyConsumption = sensor => {\n    // sum up the values in historical_data\n    var total = 0;\n    if (sensor.historical_data !== null) {\n      total = sensor.historical_data.reduce((sum, row) => sum + row.value, 0);\n    }\n    return total;\n  };\n  const calculateWaterConsumption = sensor => {\n    // sum up the values in historical_data\n    var total = 0;\n    if (sensor.historical_data !== null) {\n      total = sensor.historical_data.reduce((sum, row) => sum + row.value, 0);\n    }\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Energy Consumption: \", totalEnergyConsumption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Water Consumption: \", totalWaterConsumption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Offline Sensor Count: \", offlineSensorCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Out-of-Bounds Sensor Count: \", outOfBoundsSensorCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"MRY97JJ1kjS6ednPOmrziqVMvII=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Reports","_s","totalEnergyConsumption","setTotalEnergyConsumption","totalWaterConsumption","setTotalWaterConsumption","offlineSensorCount","setOfflineSensorCount","outOfBoundsSensorCount","setOutOfBoundsSensorCount","get","then","response","allSensors","data","energyConsumption","waterConsumption","offlineCount","outOfBoundsCount","Object","values","forEach","sensor","type","calculateEnergyConsumption","calculateWaterConsumption","status","outOfBoundsValues","historical_data","some","row","value","Math","round","catch","error","console","total","reduce","sum","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Reports = () => {\n  const [totalEnergyConsumption, setTotalEnergyConsumption] = useState(0);\n  const [totalWaterConsumption, setTotalWaterConsumption] = useState(0);\n  const [offlineSensorCount, setOfflineSensorCount] = useState(0);\n  const [outOfBoundsSensorCount, setOutOfBoundsSensorCount] = useState(0);\n\n  useEffect(() => {\n    // Fetch sensor data from the Flask backend\n    axios.get('http://localhost:5000/')\n      .then(response => {\n        const allSensors = response.data;\n\n        // Calculate total energy consumption and water consumption\n        let energyConsumption = 0;\n        let waterConsumption = 0;\n\n        // Count offline and out-of-bounds sensors\n        let offlineCount = 0;\n        let outOfBoundsCount = 0;\n\n        Object.values(allSensors).forEach(sensor => {\n            if (sensor.type === 'Energy') {\n                energyConsumption += calculateEnergyConsumption(sensor);\n            }\n            else if (sensor.type === 'Water') {\n                waterConsumption += calculateWaterConsumption(sensor);\n            }\n\n            // Check if the sensor is offline\n            if (sensor.status === 'OFF') {\n                offlineCount++;\n            }\n\n            // Check if the sensor has out-of-bounds values\n            const outOfBoundsValues = sensor.historical_data\n                ? sensor.historical_data.some(row => row.value < 0 || row.value > 4)\n                : false;\n\n            if (outOfBoundsValues) {\n                outOfBoundsCount++;\n            }\n        });\n\n        setTotalEnergyConsumption(Math.round(energyConsumption));\n        setTotalWaterConsumption(Math.round(waterConsumption));\n        setOfflineSensorCount(offlineCount);\n        setOutOfBoundsSensorCount(outOfBoundsCount);\n      })\n      .catch(error => console.error('Error fetching sensors:', error));\n  }, []);\n\n  const calculateEnergyConsumption = (sensor) => {\n    // sum up the values in historical_data\n    var total = 0;\n    if (sensor.historical_data !== null) {\n        total = sensor.historical_data.reduce((sum, row) => sum + row.value, 0);\n    }\n    return total;\n  };\n\n  const calculateWaterConsumption = (sensor) => {\n    // sum up the values in historical_data\n    var total = 0;\n    if (sensor.historical_data !== null) {\n        total = sensor.historical_data.reduce((sum, row) => sum + row.value, 0);\n    }\n    return total;\n  };\n\n  return (\n    <div>\n      <h2>Reports</h2>\n      <p>Total Energy Consumption: {totalEnergyConsumption}</p>\n      <p>Total Water Consumption: {totalWaterConsumption}</p>\n      <p>Offline Sensor Count: {offlineSensorCount}</p>\n      <p>Out-of-Bounds Sensor Count: {outOfBoundsSensorCount}</p>\n    </div>\n  );\n};\n\nexport default Reports;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvE,MAAM,CAACS,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACa,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACa,GAAG,CAAC,wBAAwB,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI;;MAEhC;MACA,IAAIC,iBAAiB,GAAG,CAAC;MACzB,IAAIC,gBAAgB,GAAG,CAAC;;MAExB;MACA,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIC,gBAAgB,GAAG,CAAC;MAExBC,MAAM,CAACC,MAAM,CAACP,UAAU,CAAC,CAACQ,OAAO,CAACC,MAAM,IAAI;QACxC,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;UAC1BR,iBAAiB,IAAIS,0BAA0B,CAACF,MAAM,CAAC;QAC3D,CAAC,MACI,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;UAC9BP,gBAAgB,IAAIS,yBAAyB,CAACH,MAAM,CAAC;QACzD;;QAEA;QACA,IAAIA,MAAM,CAACI,MAAM,KAAK,KAAK,EAAE;UACzBT,YAAY,EAAE;QAClB;;QAEA;QACA,MAAMU,iBAAiB,GAAGL,MAAM,CAACM,eAAe,GAC1CN,MAAM,CAACM,eAAe,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAG,CAAC,IAAID,GAAG,CAACC,KAAK,GAAG,CAAC,CAAC,GAClE,KAAK;QAEX,IAAIJ,iBAAiB,EAAE;UACnBT,gBAAgB,EAAE;QACtB;MACJ,CAAC,CAAC;MAEFf,yBAAyB,CAAC6B,IAAI,CAACC,KAAK,CAAClB,iBAAiB,CAAC,CAAC;MACxDV,wBAAwB,CAAC2B,IAAI,CAACC,KAAK,CAACjB,gBAAgB,CAAC,CAAC;MACtDT,qBAAqB,CAACU,YAAY,CAAC;MACnCR,yBAAyB,CAACS,gBAAgB,CAAC;IAC7C,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMX,0BAA0B,GAAIF,MAAM,IAAK;IAC7C;IACA,IAAIe,KAAK,GAAG,CAAC;IACb,IAAIf,MAAM,CAACM,eAAe,KAAK,IAAI,EAAE;MACjCS,KAAK,GAAGf,MAAM,CAACM,eAAe,CAACU,MAAM,CAAC,CAACC,GAAG,EAAET,GAAG,KAAKS,GAAG,GAAGT,GAAG,CAACC,KAAK,EAAE,CAAC,CAAC;IAC3E;IACA,OAAOM,KAAK;EACd,CAAC;EAED,MAAMZ,yBAAyB,GAAIH,MAAM,IAAK;IAC5C;IACA,IAAIe,KAAK,GAAG,CAAC;IACb,IAAIf,MAAM,CAACM,eAAe,KAAK,IAAI,EAAE;MACjCS,KAAK,GAAGf,MAAM,CAACM,eAAe,CAACU,MAAM,CAAC,CAACC,GAAG,EAAET,GAAG,KAAKS,GAAG,GAAGT,GAAG,CAACC,KAAK,EAAE,CAAC,CAAC;IAC3E;IACA,OAAOM,KAAK;EACd,CAAC;EAED,oBACEtC,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB7C,OAAA;MAAAyC,QAAA,GAAG,4BAA0B,EAACtC,sBAAsB;IAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzD7C,OAAA;MAAAyC,QAAA,GAAG,2BAAyB,EAACpC,qBAAqB;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvD7C,OAAA;MAAAyC,QAAA,GAAG,wBAAsB,EAAClC,kBAAkB;IAAA;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD7C,OAAA;MAAAyC,QAAA,GAAG,8BAA4B,EAAChC,sBAAsB;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA9EID,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAgFb,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}