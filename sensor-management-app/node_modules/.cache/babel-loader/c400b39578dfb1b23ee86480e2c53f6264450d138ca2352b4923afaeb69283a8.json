{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineSensors = ({\n  offlineSensors\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(offlineSensors).map(sensorId => {\n        const sensor = offlineSensors[sensorId];\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: sensor.serialnum\n          }, sensor.serialnum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 17\n          }, this)\n        }, sensorId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = OfflineSensors;\nexport default OfflineSensors;\nvar _c;\n$RefreshReg$(_c, \"OfflineSensors\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","OfflineSensors","offlineSensors","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","sensorId","sensor","Fragment","serialnum","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js"],"sourcesContent":["import React from 'react';\n\nconst OfflineSensors = ({ offlineSensors }) => {\n  return (\n    <div>\n      <h2>Offline Sensors</h2>\n      <ul>\n        {Object.keys(offlineSensors).map(sensorId => {\n            const sensor = offlineSensors[sensorId]\n            return (\n                <React.Fragment key={sensorId}>\n                <li key={sensor.serialnum}>\n                    {sensor.serialnum}\n                </li>\n              </React.Fragment>\n            );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default OfflineSensors;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC7C,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBP,OAAA;MAAAG,QAAA,EACGK,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC,CAACQ,GAAG,CAACC,QAAQ,IAAI;QACzC,MAAMC,MAAM,GAAGV,cAAc,CAACS,QAAQ,CAAC;QACvC,oBACIX,OAAA,CAACF,KAAK,CAACe,QAAQ;UAAAV,QAAA,eACfH,OAAA;YAAAG,QAAA,EACKS,MAAM,CAACE;UAAS,GADZF,MAAM,CAACE,SAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErB;QAAC,GAHgBI,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CAAC;MAEvB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACQ,EAAA,GAlBId,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}