{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/AddSensor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSensor = ({\n  onSensorAdded\n}) => {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    s_SensorType: '',\n    s_Location: '',\n    i_SamplingRate: ''\n  });\n  const handleAddSensor = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/Sensors', sensorData);\n      onSensorAdded(response.data); // Notify parent component about the added sensor\n      setSensorData({\n        s_SensorType: '',\n        s_Location: '',\n        i_SamplingRate: ''\n      }); // Clear input field\n    } catch (error) {\n      console.error('Error adding sensor:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Sensor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Sensor Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sensorData.s_SensorType,\n        onChange: e => setSensorData({\n          ...sensorData,\n          s_SensorType: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Location:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sensorData.s_Location,\n        onChange: e => setSensorData({\n          ...sensorData,\n          s_Location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Sampling Rate:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sensorData.i_SamplingRate,\n        onChange: e => setSensorData({\n          ...sensorData,\n          i_SamplingRate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSensor,\n      children: \"Add Sensor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSensor, \"5vfFjz1hCxnrSa62C9jQ7n6Saa4=\");\n_c = AddSensor;\nexport default AddSensor;\nvar _c;\n$RefreshReg$(_c, \"AddSensor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddSensor","onSensorAdded","_s","sensorData","setSensorData","s_SensorType","s_Location","i_SamplingRate","handleAddSensor","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/AddSensor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddSensor = ({ onSensorAdded }) => {\n  const [sensorData, setSensorData] = useState({ s_SensorType: '', s_Location: '', i_SamplingRate: '' });\n\n  const handleAddSensor = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/Sensors', sensorData);\n      onSensorAdded(response.data); // Notify parent component about the added sensor\n      setSensorData({ s_SensorType: '', s_Location: '', i_SamplingRate: '' }); // Clear input field\n    } catch (error) {\n      console.error('Error adding sensor:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Sensor</h2>\n      <label>\n        Sensor Type:\n        <input\n          type=\"text\"\n          value={sensorData.s_SensorType}\n          onChange={(e) => setSensorData({ ...sensorData, s_SensorType: e.target.value })}\n        />\n      </label>\n      <br />\n      <label>\n        Location:\n        <input\n          type=\"text\"\n          value={sensorData.s_Location}\n          onChange={(e) => setSensorData({ ...sensorData, s_Location: e.target.value })}\n        />\n      </label>\n      <br />\n      <label>\n        Sampling Rate:\n        <input\n          type=\"number\"\n          value={sensorData.i_SamplingRate}\n          onChange={(e) => setSensorData({ ...sensorData, i_SamplingRate: e.target.value })}\n        />\n      </label>\n      <br />\n      <button onClick={handleAddSensor}>Add Sensor</button>\n    </div>\n  );\n};\n\nexport default AddSensor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}