{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/AddSensor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSensor = ({\n  onSensorAdded\n}) => {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    s_SensorType: '',\n    s_Location: '',\n    i_SamplingRate: ''\n  });\n  const handleAddSensor = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/Sensors', sensorData);\n      onSensorAdded(response.data); // Notify parent component about the added sensor\n      setSensorData({\n        s_SensorType: '',\n        s_Location: '',\n        i_SamplingRate: ''\n      }); // Clear input field\n    } catch (error) {\n      console.error('Error adding sensor:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Sensor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Sensor Type\",\n      value: sensorData.s_SensorType,\n      onChange: e => setSensorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: sensorData.s_Location,\n      onChange: e => setSensorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Sampling Rate\",\n      value: sensorData.i_SamplingRate,\n      onChange: e => setSensorName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSensor,\n      children: \"Add Sensor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSensor, \"5vfFjz1hCxnrSa62C9jQ7n6Saa4=\");\n_c = AddSensor;\nexport default AddSensor;\nvar _c;\n$RefreshReg$(_c, \"AddSensor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddSensor","onSensorAdded","_s","sensorData","setSensorData","s_SensorType","s_Location","i_SamplingRate","handleAddSensor","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","setSensorName","target","onClick","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/AddSensor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddSensor = ({ onSensorAdded }) => {\n  const [sensorData, setSensorData] = useState({ s_SensorType: '', s_Location: '', i_SamplingRate: '' });\n\n  const handleAddSensor = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/Sensors', sensorData);\n      onSensorAdded(response.data); // Notify parent component about the added sensor\n      setSensorData({ s_SensorType: '', s_Location: '', i_SamplingRate: '' }); // Clear input field\n    } catch (error) {\n      console.error('Error adding sensor:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Sensor</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Sensor Type\"\n        value={sensorData.s_SensorType}\n        onChange={(e) => setSensorName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Location\"\n        value={sensorData.s_Location}\n        onChange={(e) => setSensorName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Sampling Rate\"\n        value={sensorData.i_SamplingRate}\n        onChange={(e) => setSensorName(e.target.value)}\n      />\n      <button onClick={handleAddSensor}>Add Sensor</button>\n    </div>\n  );\n};\n\nexport default AddSensor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC;IAAES,YAAY,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,cAAc,EAAE;EAAG,CAAC,CAAC;EAEtG,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,+BAA+B,EAAEP,UAAU,CAAC;MAC9EF,aAAa,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC9BP,aAAa,CAAC;QAAEC,YAAY,EAAE,EAAE;QAAEC,UAAU,EAAE,EAAE;QAAEC,cAAc,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAElB,UAAU,CAACE,YAAa;MAC/BiB,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAElB,UAAU,CAACG,UAAW;MAC7BgB,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAElB,UAAU,CAACI,cAAe;MACjCe,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFnB,OAAA;MAAQ2B,OAAO,EAAElB,eAAgB;MAAAM,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCIF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}