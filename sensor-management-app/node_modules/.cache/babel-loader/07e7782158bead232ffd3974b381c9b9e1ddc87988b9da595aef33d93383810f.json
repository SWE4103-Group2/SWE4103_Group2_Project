{"ast":null,"code":"var _jsxFileName = \"/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OfflineSensors = ({\n  offlineSensors\n}) => {\n  // Check if sensors is defined before using Object.keys\n  /*const offlineSensorIds = offlineSensors\n      ? Object.keys(offlineSensors).filter(sensorId => (\n          offlineSensors[sensorId]?.historical_data?.value < 0 || offlineSensors[sensorId]?.historical_data?.value > 4\n          ))\n      : [];*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Offline Sensors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(offlineSensors).map(sensor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Serial Number: \", sensor.serial_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", sensor.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sensor.historical_data.map(row => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Timestamp: \", row.timestamp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Value: \", row.value]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this)]\n          }, row.timestamp, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, sensor.serial_number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = OfflineSensors;\nexport default OfflineSensors;\nvar _c;\n$RefreshReg$(_c, \"OfflineSensors\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","OfflineSensors","offlineSensors","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","sensor","serial_number","status","historical_data","row","timestamp","value","_c","$RefreshReg$"],"sources":["/Users/edgarcobos/Desktop/flask/sensor-management-app/src/OfflineSensors.js"],"sourcesContent":["import React from 'react';\n\nconst OfflineSensors = ({ offlineSensors }) => {\n    // Check if sensors is defined before using Object.keys\n    /*const offlineSensorIds = offlineSensors\n        ? Object.keys(offlineSensors).filter(sensorId => (\n            offlineSensors[sensorId]?.historical_data?.value < 0 || offlineSensors[sensorId]?.historical_data?.value > 4\n            ))\n        : [];*/\n    \n    return (\n        <div>\n        <h2>Offline Sensors</h2>\n        <ul>\n            {Object.values(offlineSensors).map(sensor => (\n                <li key={sensor.serial_number}>\n                    <p>Serial Number: {sensor.serial_number}</p>\n                    <p>Status: {sensor.status}</p>\n                    <ul>\n                    {sensor.historical_data.map(row => (\n                        <li key={row.timestamp}>\n                        <p>Timestamp: {row.timestamp}</p>\n                        <p>Value: {row.value}</p>\n                        {/* Other properties you want to render from historical_data */}\n                        </li>\n                    ))}\n                    </ul>\n                </li>\n            ))}\n        </ul>\n        </div>\n    );\n};\n\nexport default OfflineSensors;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC3C;EACA;AACJ;AACA;AACA;AACA;;EAEI,oBACIF,OAAA;IAAAG,QAAA,gBACAH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBP,OAAA;MAAAG,QAAA,EACKK,MAAM,CAACC,MAAM,CAACP,cAAc,CAAC,CAACQ,GAAG,CAACC,MAAM,iBACrCX,OAAA;QAAAG,QAAA,gBACIH,OAAA;UAAAG,QAAA,GAAG,iBAAe,EAACQ,MAAM,CAACC,aAAa;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CP,OAAA;UAAAG,QAAA,GAAG,UAAQ,EAACQ,MAAM,CAACE,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BP,OAAA;UAAAG,QAAA,EACCQ,MAAM,CAACG,eAAe,CAACJ,GAAG,CAACK,GAAG,iBAC3Bf,OAAA;YAAAG,QAAA,gBACAH,OAAA;cAAAG,QAAA,GAAG,aAAW,EAACY,GAAG,CAACC,SAAS;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjCP,OAAA;cAAAG,QAAA,GAAG,SAAO,EAACY,GAAG,CAACE,KAAK;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFhBQ,GAAG,CAACC,SAAS;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIlB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAXAI,MAAM,CAACC,aAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYzB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACW,EAAA,GA9BIjB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}